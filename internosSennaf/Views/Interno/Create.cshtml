@model internosSennaf.Models.Interno

@{
    ViewBag.Title = "Create";
}

<h2>Crear</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Interno</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Numero</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tipo</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("tipo", new SelectList(ViewBag.tipo, "Value", "Text"), new { @class = "form-control col-md-2" })
                @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">TN</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.tn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tn, "", new { @class = "text-danger" })
                <small class="text-muted">Donde se ubica en la central telefonica</small>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Estado</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("estado", new SelectList(ViewBag.estado, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                <small class="text-muted">Si esta libre, usado, etc...</small>
            </div>
        </div>

        <div class="form-group ">
            <label class="control-label col-md-2">Ocultar?</label>
            <div class="col-md-10">
                @*@Html.CheckBoxFor(interno => interno.ocultar.Value, new { @style = "height: 25px;" })*@
                @Html.CheckBox("ocultar", false, new { htmlAttributes = new { @class = "form-control" }, @style = "height: 25px;" })
                @Html.ValidationMessageFor(model => model.ocultar, "", new { @class = "text-danger" })
                <p><small class="text-muted">Si se muestra en el listado general</small></p>

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Observacion</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Dependencia
            </label>
            <div class="col-md-10">
                @Html.DropDownList("idDependencia", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.idSector, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sector</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idSector, new SelectList(string.Empty, "identi", "descri"), htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownList("idSector", new SelectList(string.Empty, "identi", "descri"), "Seleccione un Sector...", htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.Sector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#idDependencia").change(function () {
                $("#idSector").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("TraerSectores")',
                    dataType: 'json',
                    data: { idDependencia: $("#idDependencia").val() },
                    success: function (listadoSectores) {
                        $.each(listadoSectores, function (i, dato) {
                            $("#idSector").append('<option value="' + dato.identi + '">' + dato.descri + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Ocurrio un error al traer los Sectores' + ex);
                    }
                });
                return false;
            })
        });
    </script>

    @*<script type="text/javascript">
            $(document).ready(function () {
                $("#idDependencia").change(function () {
                    $("#idSector").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("TraerSectores")',
                        dataType: 'json',
                        data: { idDependencia: $("#idDependencia").val() },
                        success: function (listadoSectores) {
                            $.each(listadoSectores, function (i, dato) {
                                $("#idSector").append('<option value="' + dato.identi + '">' + dato.descri + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Ocurrio un error al traer los Sectores' + ex);
                        }
                    });
                    return false;
                })
            });
        </script>*@
}
