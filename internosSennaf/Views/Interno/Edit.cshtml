@model internosSennaf.Models.Interno

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Interno</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.Label("Numero Interno", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numero, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idSector, "Sector Asignado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idSector", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idSector, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Ocultar?
        </label>
        <div class="col-md-10">
            @Html.CheckBox("ocultar", Model.ocultar.Value, new { @class = "form-control", @style="width: 25px;" })
            @Html.ValidationMessageFor(model => model.ocultar, "", new { @class = "text-danger" })
            <small class="text-muted">* Si se muestra en el listado general</small>
        </div>
    </div>

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.tipo, new SelectList(ViewBag.opcionesTipos, "Value", "Text"), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tn, "TN", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tn, "", new { @class = "text-danger" })
            <small class="text-muted">* Donde se ubica en la central telefonica</small>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado, new SelectList(ViewBag.opcionesEstados, "Value", "Text"), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            <small class="text-muted">* Si esta libre, usado, etc...</small>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.observacion, "Observación", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextAreaFor(model => model.observacion, new { @class = "form-control", @rows = "4" })
            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group">
        <div class="col-md-offset-3 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-danger" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(" Volver", "Index", null, new { @class = "glyphicon glyphicon-arrow-left tamanoIconoVolver" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
